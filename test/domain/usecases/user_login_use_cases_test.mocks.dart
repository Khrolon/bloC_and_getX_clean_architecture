// Mocks generated by Mockito 5.3.2 from annotations
// in poc/test/domain/usecases/user_login_use_cases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;

import 'package:dartz/dartz.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:poc/core/errors/failures.dart' as _i10;
import 'package:poc/data/data_sources/get_user_by_google_login_data_source.dart'
    as _i4;
import 'package:poc/data/data_sources/get_user_token_by_google_login_data_source.dart'
    as _i5;
import 'package:poc/data/data_sources/get_user_token_data_source.dart' as _i3;
import 'package:poc/data/data_sources/user_google_logout_data_source.dart'
    as _i6;
import 'package:poc/data/data_sources/user_login_data_source.dart' as _i2;
import 'package:poc/data/repositories/login_repository.dart' as _i8;
import 'package:poc/domain/entities/user_entity.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIUserLoginDataSource_0 extends _i1.SmartFake
    implements _i2.IUserLoginDataSource {
  _FakeIUserLoginDataSource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIGetUserTokenDataSource_1 extends _i1.SmartFake
    implements _i3.IGetUserTokenDataSource {
  _FakeIGetUserTokenDataSource_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIGetUserByGoogleLoginDataSource_2 extends _i1.SmartFake
    implements _i4.IGetUserByGoogleLoginDataSource {
  _FakeIGetUserByGoogleLoginDataSource_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIGetUserTokenByGoogleLoginDataSource_3 extends _i1.SmartFake
    implements _i5.IGetUserTokenByGoogleLoginDataSource {
  _FakeIGetUserTokenByGoogleLoginDataSource_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIUserGoogleLogoutDataSource_4 extends _i1.SmartFake
    implements _i6.IUserGoogleLogoutDataSource {
  _FakeIUserGoogleLogoutDataSource_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_5<L, R> extends _i1.SmartFake implements _i7.Either<L, R> {
  _FakeEither_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LoginRepositoryImp].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginRepositoryImp extends _i1.Mock
    implements _i8.LoginRepositoryImp {
  MockLoginRepositoryImp() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IUserLoginDataSource get userLoginDataSource => (super.noSuchMethod(
        Invocation.getter(#userLoginDataSource),
        returnValue: _FakeIUserLoginDataSource_0(
          this,
          Invocation.getter(#userLoginDataSource),
        ),
      ) as _i2.IUserLoginDataSource);
  @override
  _i3.IGetUserTokenDataSource get getUserTokenDataSource => (super.noSuchMethod(
        Invocation.getter(#getUserTokenDataSource),
        returnValue: _FakeIGetUserTokenDataSource_1(
          this,
          Invocation.getter(#getUserTokenDataSource),
        ),
      ) as _i3.IGetUserTokenDataSource);
  @override
  _i4.IGetUserByGoogleLoginDataSource get getUserByGoogleLoginDataSource =>
      (super.noSuchMethod(
        Invocation.getter(#getUserByGoogleLoginDataSource),
        returnValue: _FakeIGetUserByGoogleLoginDataSource_2(
          this,
          Invocation.getter(#getUserByGoogleLoginDataSource),
        ),
      ) as _i4.IGetUserByGoogleLoginDataSource);
  @override
  _i5.IGetUserTokenByGoogleLoginDataSource
      get getUserTokenByGoogleLoginDataSource => (super.noSuchMethod(
            Invocation.getter(#getUserTokenByGoogleLoginDataSource),
            returnValue: _FakeIGetUserTokenByGoogleLoginDataSource_3(
              this,
              Invocation.getter(#getUserTokenByGoogleLoginDataSource),
            ),
          ) as _i5.IGetUserTokenByGoogleLoginDataSource);
  @override
  _i6.IUserGoogleLogoutDataSource get userGoogleLogoutDataSource =>
      (super.noSuchMethod(
        Invocation.getter(#userGoogleLogoutDataSource),
        returnValue: _FakeIUserGoogleLogoutDataSource_4(
          this,
          Invocation.getter(#userGoogleLogoutDataSource),
        ),
      ) as _i6.IUserGoogleLogoutDataSource);
  @override
  _i9.Future<_i7.Either<_i10.Failure, _i11.UserEntity>> getUserLogin() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserLogin,
          [],
        ),
        returnValue:
            _i9.Future<_i7.Either<_i10.Failure, _i11.UserEntity>>.value(
                _FakeEither_5<_i10.Failure, _i11.UserEntity>(
          this,
          Invocation.method(
            #getUserLogin,
            [],
          ),
        )),
      ) as _i9.Future<_i7.Either<_i10.Failure, _i11.UserEntity>>);
  @override
  _i9.Future<_i7.Either<_i10.Failure, bool>> getUserToken(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserToken,
          [
            email,
            password,
          ],
        ),
        returnValue: _i9.Future<_i7.Either<_i10.Failure, bool>>.value(
            _FakeEither_5<_i10.Failure, bool>(
          this,
          Invocation.method(
            #getUserToken,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i9.Future<_i7.Either<_i10.Failure, bool>>);
  @override
  _i9.Future<_i7.Either<_i10.Failure, bool>> getUserByGoogleLogin() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByGoogleLogin,
          [],
        ),
        returnValue: _i9.Future<_i7.Either<_i10.Failure, bool>>.value(
            _FakeEither_5<_i10.Failure, bool>(
          this,
          Invocation.method(
            #getUserByGoogleLogin,
            [],
          ),
        )),
      ) as _i9.Future<_i7.Either<_i10.Failure, bool>>);
  @override
  _i9.Future<_i7.Either<_i10.Failure, bool>> getUserTokenByGoogleLogin() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserTokenByGoogleLogin,
          [],
        ),
        returnValue: _i9.Future<_i7.Either<_i10.Failure, bool>>.value(
            _FakeEither_5<_i10.Failure, bool>(
          this,
          Invocation.method(
            #getUserTokenByGoogleLogin,
            [],
          ),
        )),
      ) as _i9.Future<_i7.Either<_i10.Failure, bool>>);
  @override
  _i9.Future<_i7.Either<_i10.Failure, bool>> userGoogleLogout() =>
      (super.noSuchMethod(
        Invocation.method(
          #userGoogleLogout,
          [],
        ),
        returnValue: _i9.Future<_i7.Either<_i10.Failure, bool>>.value(
            _FakeEither_5<_i10.Failure, bool>(
          this,
          Invocation.method(
            #userGoogleLogout,
            [],
          ),
        )),
      ) as _i9.Future<_i7.Either<_i10.Failure, bool>>);
}
